'use strict';

import {NativeModules, NativeEventEmitter} from 'react-native'

var InputModule = NativeModules.InputModule;

/**
 * List of valid input event names.
 */
type InputEventName = $Enum<{
    YI_KEY_UNIDENTIFIED :string, /* Key code for unidentified keys. */
    YI_KEY_ATTN :string, /* Secure attention key. */
    YI_KEY_APPS :string, /* Application or menu key. */
    YI_KEY_CRSEL :string, /* Crsel key. */
    YI_KEY_EXSEL :string, /* Exsel key. */
    YI_KEY_F1 :string, /* F1 key. */
    YI_KEY_F2 :string, /* F2 key. */
    YI_KEY_F3 :string, /* F3 key. */
    YI_KEY_F4 :string, /* F4 key. */
    YI_KEY_F5 :string, /* F5 key. */
    YI_KEY_F6 :string, /* F6 key. */
    YI_KEY_F7 :string, /* F7 key. */
    YI_KEY_F8 :string, /* F8 key. */
    YI_KEY_F9 :string, /* F9 key. */
    YI_KEY_F10 :string, /* F10 key. */
    YI_KEY_F11 :string, /* F11 key. */
    YI_KEY_F12 :string, /* F12 key. */
    YI_KEY_F13 :string, /* F13 key. */
    YI_KEY_F14 :string, /* F14 key. */
    YI_KEY_F15 :string, /* F15 key. */
    YI_KEY_F16 :string, /* F16 key. */
    YI_KEY_F17 :string, /* F17 key. */
    YI_KEY_F18 :string, /* F18 key. */
    YI_KEY_F19 :string, /* F19 key. */
    YI_KEY_F20 :string, /* F20 key. */
    YI_KEY_F21 :string, /* F21 key. */
    YI_KEY_F22 :string, /* F22 key. */
    YI_KEY_F23 :string, /* F23 key. */
    YI_KEY_F24 :string, /* F24 key. */
    YI_KEY_LAUNCH_APP1 :string, /* Key for launching the first application. */
    YI_KEY_LAUNCH_APP2 :string, /* Key for launching the second application. */
    YI_KEY_LAUNCH_MAIL :string, /* Key for launching the mail application. */
    YI_KEY_LIST :string, /* List key. */
    YI_KEY_PROPS :string, /* Props key. */
    YI_KEY_SOFT1 :string, /* Soft1 key. */
    YI_KEY_SOFT2 :string, /* Soft2 key. */
    YI_KEY_SOFT3 :string, /* Soft3 key. */
    YI_KEY_SOFT4 :string, /* Soft4 key. */
    YI_KEY_ACCEPT :string, /* Accept, Commit or OK key. */
    YI_KEY_AGAIN :string, /* Again key. */
    YI_KEY_ENTER :string, /* Enter key. */
    YI_KEY_FIND :string, /* Find key. */
    YI_KEY_HELP :string, /* Help key. */
    YI_KEY_INFO :string, /* Info key. */
    YI_KEY_MENU :string, /* Menu key. */
    YI_KEY_PAUSE :string, /* Pause key. */
    YI_KEY_PLAY :string, /* Play key. */
    YI_KEY_SCROLL_LOCK :string, /* Scrolling Lock key. */
    YI_KEY_EXECUTE :string, /* Execute key. */
    YI_KEY_CANCEL :string, /* Cancel key. */
    YI_KEY_ESC :string, /* Escape key. */
    YI_KEY_ZOOM :string, /* Zoom key. */
    YI_KEY_SEPARATOR :string, /* Separator key. */
    YI_KEY_SPACE :string, /* Space key. */
    YI_KEY_ADD :string, /* Add key. */
    YI_KEY_SUBTRACT :string, /* Subtract key. */
    YI_KEY_MULTIPLY :string, /* Multiply key. */
    YI_KEY_DIVIDE :string, /* Divide key. */
    YI_KEY_EQUAL :string, /* Equal key. */
    YI_KEY_DECIMAL :string, /* Decimal key. */
    YI_KEY_BRIGHTNESS_DOWN :string, /* Key for decreasing the display brightness. */
    YI_KEY_BRIGHTNESS_UP :string, /* Key for increasing the display brightness. */
    YI_KEY_CAMERA :string, /* Camera button. */
    YI_KEY_EJECT :string, /* Eject button. */
    YI_KEY_POWER :string, /* Power button. */
    YI_KEY_PRINT_SCREEN :string, /* Printscreen key. */
    YI_KEY_BROWSER_FAVORITES :string, /* Key for opening the favourites/bookmarks. */
    YI_KEY_BROWSER_HOME :string, /* Key for returning to your Homepage. */
    YI_KEY_BROWSER_REFRESH :string, /* Key to refresh the page. */
    YI_KEY_BROWSER_SEARCH :string, /* Key for searching the internet. */
    YI_KEY_BROWSER_STOP :string, /* Key for stopping a page load. */
    YI_KEY_BROWSER_BACK :string, /* Key to go to the previous loaded webpage in your history, if available. */
    YI_KEY_BROWSER_FORWARD :string, /* Key to go to the next loaded webpage in your history, if available. */
    YI_KEY_PAGEUP :string, /* Page Up key. */
    YI_KEY_PAGEDOWN :string, /* Page Down key. */
    YI_KEY_ARROW_LEFT :string, /* Left Arrow key. */
    YI_KEY_ARROW_RIGHT :string, /* Right Arrow key. */
    YI_KEY_ARROW_UP :string, /* Up Arrow key. */
    YI_KEY_ARROW_UP_LEFT :string, /* Diagonal up-left arrow key. */
    YI_KEY_ARROW_UP_RIGHT :string, /* Diagonal up-right arrow key. */
    YI_KEY_ARROW_DOWN :string, /* Down Arrow key. */
    YI_KEY_ARROW_DOWN_LEFT :string, /* Diagonal down-left arrow key. */
    YI_KEY_ARROW_DOWN_RIGHT :string, /* Diagonal down-right arrow key. */
    YI_KEY_HOME :string, /* Home key. */
    YI_KEY_END :string, /* End key. */
    YI_KEY_SELECT :string, /* Select key.*/
    YI_KEY_TAB :string, /* Tab key. */
    YI_KEY_BACKSPACE :string, /* Backspace key. */
    YI_KEY_CLEAR :string, /* Clear key. */
    YI_KEY_COPY :string, /* Copy key. */
    YI_KEY_CUT :string, /* Cut key. */
    YI_KEY_DEL :string, /* Delete key. */
    YI_KEY_ERASE_EOF :string, /* Erase to End of Field key. Deletes any characters from the current cursor position to the end of the current field. */
    YI_KEY_INSERT :string, /* Insert key. */
    YI_KEY_PASTE :string, /* Paste key. */
    YI_KEY_UNDO :string, /* Undo key. */
    YI_KEY_DEAD_GRAVE :string, /* Combining Grave accent (Greek Varia, Dead Grave) key. */
    YI_KEY_DEAD_ACUTE :string, /* Combining Acute accent (Stress Mark, Greek Oxia, Tonos, Dead Eacute) key. */
    YI_KEY_DEAD_CIRCUMFLEX :string, /* Combining Circumflex accent (Hat, Dead Circumflex) key. */
    YI_KEY_DEAD_TILDE :string, /* Combinging Tilde (Dead Tilde) key. */
    YI_KEY_DEAD_MACRON :string, /* Combining Macron (Long, Dead Macron) key. */
    YI_KEY_DEAD_BREVE :string, /* Combining Breve (Short, Dead Breve) key. */
    YI_KEY_DEAD_ABOVE_DOT :string, /* Combining Dot Above (Derivative, Dead Above Dot) key. */
    YI_KEY_DEAD_UMLAUT :string, /* Combining Diaeresis (Double Dot Abode, Umlaut, Greek Dialytika, Double Derivative, Dead Diaeresis) key. */
    YI_KEY_DEAD_ABOVE_RING :string, /* Combining Ring Above (Dead Above Ring) key. */
    YI_KEY_DEAD_DOUBLE_ACUTE :string, /* Combining Double Acute accent (Dead Doubleacute) key. */
    YI_KEY_DEAD_CARON :string, /* Combining Caron (Hacek, V Above, Dead Caron) key. */
    YI_KEY_DEAD_CEDILLA :string, /* Combining Cedilla (Dead Cedilla) key. */
    YI_KEY_DEAD_OGONEK :string, /* Combining Ogonek (Nasal Hook, Dead Ogonek) key. */
    YI_KEY_DEAD_IOTA :string, /* Combining Greek Ypogegrammeni (Greek Non-Spacing Iota Below, Iota Subscript, Dead Iota) key. */
    YI_KEY_DEAD_VOICED_SOUND :string, /* Combining Katakana-Hiragana Voiced Sound Mark (Dead Voiced Sound) key. */
    YI_KEY_DEAD_SEMIVOICED_SOUND :string, /* Combining Katakana-Hiragana Semi-Voiced Sound Mark (Dead Semivoiced Sound) key. */
    YI_KEY_ALPHANUMERIC :string, /* Alphanumeric Keys (a-zA-Z0-9). */
    YI_KEY_ALT :string, /* Alt key. */
    YI_KEY_ALT_GRAPH :string, /* Alt-Graph or Right Alt key. */
    YI_KEY_CAPS_LOCK :string, /* Caps Lock key. */
    YI_KEY_CONTROL :string, /* Control key. */
    YI_KEY_FN :string, /* Function key. */
    YI_KEY_META :string, /* Meta key. */
    YI_KEY_PROCESS :string, /* Process key. */
    YI_KEY_NUM_LOCK :string, /* Number Lock key. */
    YI_KEY_SHIFT :string, /* Shift key. */
    YI_KEY_SYMBOL_LOCK :string, /* Symbol Lock key. */
    YI_KEY_OS :string, /* Windows key, or Command key on a Mac. */
    YI_KEY_COMPOSE :string, /* Compose key. */
    YI_KEY_ALL_CANDIDATES :string, /* All candidates key. */
    YI_KEY_NEXT_CANDIDATE :string, /* Next candidate key. */
    YI_KEY_PREVIOUS_CANDIDATE :string, /* Previous candidate key. */
    YI_KEY_CODE_INPUT :string, /* Code input key. */
    YI_KEY_CONVERT :string, /* Convert key. */
    YI_KEY_NONCONVERT :string, /* Non-convert key. */
    YI_KEY_FINAL_MODE :string, /* Final Mode (Final) key used on some asian keyboards. */
    YI_KEY_FULL_WIDTH :string, /* Full-Width Characters key. */
    YI_KEY_HALF_WIDTH :string, /* Half-Width Characters key. */
    YI_KEY_MODE_CHANGE :string, /* Mode Change key. */
    YI_KEY_ROMAN_CHARACTERS :string, /* Roman Characters function key. */
    YI_KEY_HANGUL_MODE :string, /* Hangul (Korean characters) Mode key. */
    YI_KEY_HANJA_MODE :string, /* Hanja (Korean characters) Mode key. */
    YI_KEY_JUNJA_MODE :string, /* Junja Mode key. */
    YI_KEY_HIRAGANA :string, /* Hiragana (Japanese Kana characters) key. */
    YI_KEY_KANA_MODE :string, /* Kana Mode (Kana Lock) key. */
    YI_KEY_KANJI_MODE :string, /* Kanji (Japanese ideographic characters) Mode key. */
    YI_KEY_KATAKANA :string, /* Katakana (Japanese Kana characters) key. */
    YI_KEY_AUDIO_FADER_FRONT :string, /* Audio fader front key. */
    YI_KEY_AUDIO_FADER_REAR :string, /* Audio fader rear key. */
    YI_KEY_AUDIO_BALANCE_LEFT :string, /* Audio balance left key. */
    YI_KEY_AUDIO_BALANCE_RIGHT :string, /* Audio balance right key. */
    YI_KEY_AUDIO_BASE_BOOST_DOWN :string, /* Audio base boost down key. */
    YI_KEY_AUDIO_BASE_BOOST_UP :string, /* Audio base boost up key. */
    YI_KEY_VOLUME_MUTE :string, /* Mute audio key. */
    YI_KEY_VOLUME_DOWN :string, /* Key for decreasing the volume of the audio. */
    YI_KEY_VOLUME_UP :string, /* Key for increasing the volume of the audio. */
    YI_KEY_MEDIA_PAUSE :string, /* Key for pausing media. */
    YI_KEY_MEDIA_PLAY :string, /* Key for playing media. */
    YI_KEY_MEDIA_TRACK_END :string, /* Key for jumping to the end of the current media. */
    YI_KEY_MEDIA_NEXT_TRACK :string, /* Key for going to the next playable media. */
    YI_KEY_MEDIA_FAST_FORWARD :string, /* Key for fast-forwarding through the current media. */
    YI_KEY_MEDIA_REWIND :string, /* Key for rewinding through the current media. */
    YI_KEY_MEDIA_PLAY_PAUSE :string, /* Key that toggles between playing or pausing the current media. */
    YI_KEY_MEDIA_PREVIOUS_TRACK :string, /* Key for going the previous playable media. */
    YI_KEY_MEDIA_TRACK_SKIP :string, /* Key for going to the next playable media. */
    YI_KEY_MEDIA_TRACK_START :string, /* Key for jumping to the beginning of the current media.*/
    YI_KEY_MEDIA_STEP_FORWARD :string, /* Key for seeking forward through the current media. */
    YI_KEY_MEDIA_STEP_BACKWARD :string, /* Key for seeking backwards through the current media. */
    YI_KEY_MEDIA_STOP :string, /* Key for stopping media playback. */
    YI_KEY_MEDIA_INSTANT_REPLAY :string, /* Instant replay key. */
    YI_KEY_SELECT_MEDIA :string, /* Select media key. */
    YI_KEY_BLUE :string, /* The blue key found on a generic TV remote. Also sometimes labelled as D. */
    YI_KEY_BROWN :string, /* The brown key found on a generic TV remote. */
    YI_KEY_CHANNEL_DOWN :string, /* Key for going to the next channel. */
    YI_KEY_CHANNEL_UP :string, /* Key for going to the previous channel. */
    YI_KEY_CLEAR_FAVORITE0 :string, /* First clear favourite key. */
    YI_KEY_CLEAR_FAVORITE1 :string, /* Second clear favourite key. */
    YI_KEY_CLEAR_FAVORITE2 :string, /* Third clear favourite key. */
    YI_KEY_CLEAR_FAVORITE3 :string, /* Fourth clear favourite key. */
    YI_KEY_DIMMER :string, /* Dimmer key. */
    YI_KEY_DISPLAY_SWAP :string, /* Display swap key. */
    YI_KEY_GREEN :string, /* The green key found on a generic TV remote. Also sometimes labelled as B. */
    YI_KEY_GREY :string, /* The grey key found on a generic TV remote. */
    YI_KEY_GUIDE :string, /* Guide key. */
    YI_KEY_MEDIA_LIST :string, /* List media key. */
    YI_KEY_LINK :string, /* Link key. */
    YI_KEY_LIVE :string, /* Live key. */
    YI_KEY_LOCK :string, /* Lock key. */
    YI_KEY_NEXT_DAY :string, /* Next day key. */
    YI_KEY_NEXT_FAVORITE_CHANNEL :string, /* Next favourite channel key. */
    YI_KEY_ON_DEMAND :string, /* On demand key. */
    YI_KEY_PINP_DOWN :string, /* Picture in Picture down key. */
    YI_KEY_PINP_MOVE :string, /* Picture in Picture move key. */
    YI_KEY_PINP_TOGGLE :string, /* Picture in Picture toggle key. */
    YI_KEY_PINP_UP :string, /* Picture in Picture up key. */
    YI_KEY_PLAY_SPEED_DOWN :string, /* Play speed down key. */
    YI_KEY_PLAY_SPEED_RESET :string, /* Play speed reset key. */
    YI_KEY_PREV_DAY :string, /* Previous day key. */
    YI_KEY_RANDOM_TOGGLE :string, /* Random toggle key. */
    YI_KEY_RECALL_FAVORITE0 :string, /* First recall favourite key. */
    YI_KEY_RECALL_FAVORITE1 :string, /* Second recall favourite key. */
    YI_KEY_RECALL_FAVORITE2 :string, /* Third recall favourite key. */
    YI_KEY_RECALL_FAVORITE3 :string, /* Fourth recall favourite key. */
    YI_KEY_MEDIA_RECORD :string, /* Record media key. */
    YI_KEY_RECORD_SPEED_NEXT :string, /* Next record speed key. */
    YI_KEY_RED :string, /* The red key found on a generic TV remote. Also sometimes labelled as A. */
    YI_KEY_RF_BYPASS :string, /* Key for switching between IR and RF mode. */
    YI_KEY_SCAN_CHANNELS_TOGGLE :string, /* Scan channels toggle key. */
    YI_KEY_SCREEN_MODE_NEXT :string, /* Next screen mode key. */
    YI_KEY_SETTINGS :string, /* Settings key. */
    YI_KEY_SPLIT_SCREEN_TOGGLE :string, /* Split screen toggle key. */
    YI_KEY_STORE_FAVORITE0 :string, /* First store favourite key. */
    YI_KEY_STORE_FAVORITE1 :string, /* Second store favourite key. */
    YI_KEY_STORE_FAVORITE2 :string, /* Third store favourite key. */
    YI_KEY_STORE_FAVORITE3 :string, /* Fourth store favourite key. */
    YI_KEY_SUBTITLE :string, /* Subtitle key. */
    YI_KEY_AUDIO_SURROUND_MODE_NEXT :string, /* Next audio surriund sound mode key. */
    YI_KEY_TELETEXT :string, /* Teletext key. */
    YI_KEY_VIDEO_MODE_NEXT :string, /* Next video mode key. */
    YI_KEY_DISPLAY_WIDE :string, /* Wide display key. */
    YI_KEY_WINK :string, /* Wink key. */
    YI_KEY_YELLOW :string, /* The yellow key found on a generic TV remote. Also sometimes labelled as C. */
    YI_KEY_SYSTEM_HOME :string, /* System Home button. */
    YI_KEY_SYSTEM_BACK :string, /* Back button. */
    YI_KEY_GAMEPAD0 :string, /* X Button on a Playstation controller, A button on an XBox controller */
    YI_KEY_GAMEPAD1 :string, /* ○ Button on a Playstation controller, B button on an XBox controller */
    YI_KEY_GAMEPAD2 :string, /* □ Button on a Playstation controller, X button on an XBox controller */
    YI_KEY_GAMEPAD3 :string, /* △ Button on a Playstation controller, Y button on an XBox controller*/
    YI_KEY_GAMEPAD_LEFT_BUMPER :string, /* The left bumper on a controller (i.e LB on a PS4 controller) */
    YI_KEY_GAMEPAD_RIGHT_BUMPER :string, /* The right bumper on a controller (i.e RB on a PS4 controller) */
    YI_KEY_GAMEPAD_LEFT_TRIGGER :string, /* The left trigger on a controller (i.e LT on a PS4 controller) */
    YI_KEY_GAMEPAD_RIGHT_TRIGGER :string, /* The right trigger on a controller (i.e RT on a PS4 controller) */
    YI_KEY_GAMEPAD_LEFT_STICK :string, /* The left analog button on a controller (i.e. L3 on a PS4 controller) */
    YI_KEY_GAMEPAD_RIGHT_STICK :string, /* The right analog button on a controller (i.e. R3 on a PS4 controller) */
    YI_KEY_GAMEPAD_SELECT :string, /* The select button on a controller */
    YI_KEY_GAMEPAD_START :string, /* The start button on a controller */
    YI_KEY_DVR :string, /* DVR key. */
    YI_KEY_TV :string, /* TV key. */
    YI_KEY_CAPTIONS :string, /* Captions key. */
    YI_KEY_SEARCH :string, /* Search key on remotes. */
    YI_KEY_VOICE_SEARCH :string, /* Voice search key on remotes. */
    YI_KEY_TV_3DMODE :string, /* Magic Remote 3D TV mode key. */
    YI_KEY_MAGIC_INPUT :string, /* Magic Remote input key. */
}>;

/**
 * Detects input button presses. 
 * Users may register to input events to handle custom behaviour if necessary.
 * Note: Listeners will be notified of input events after they have been handled.
 */
class Input extends NativeEventEmitter{

  constructor() {
    super(InputModule);
  }

  /**
   * Add an event listener.
   *
   * @param {InputEventName} type The name of the input event to listen to.
   * @param {Function} handler The function to call that will handle the event.
   */
  addEventListener(type: InputEventName, handler: Function) {
    this.addListener(type, handler);
  }
  
  /**
   * Remove an event listener.
   *
   * @param {InputEventName} type The name of the input event being listened to.
   * @param {Function} handler The function that is called to handle the event.
   */
  removeEventListener(type: InputEventName, handler: Function ) {
    this.removeListener(type, handler);
  }

};

module.exports = new Input();
